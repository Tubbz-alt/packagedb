#!/usr/bin/python -tt
# -*- coding: utf-8 -*-
#
# Copyright © 2008  Red Hat, Inc. All rights reserved.
#
# This copyrighted material is made available to anyone wishing to use, modify,
# copy, or redistribute it subject to the terms and conditions of the GNU
# General Public License v.2.  This program is distributed in the hope that it
# will be useful, but WITHOUT ANY WARRANTY expressed or implied, including the
# implied warranties of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.  You should have
# received a copy of the GNU General Public License along with this program;
# if not, write to the Free Software Foundation, Inc., 51 Franklin Street,
# Fifth Floor, Boston, MA 02110-1301, USA. Any Red Hat trademarks that are
# incorporated in the source code or documentation are not subject to the GNU
# General Public License and may only be used or replicated with the express
# permission of Red Hat, Inc.
#
# Fedora Project Author(s): Ionuț Arțăriși <mapleoin@fedoraproject.org>
'''
Changes statuscodes of orphaned and retired packages based on owner ids and 
the age of the statuschange respectively.

The first part of this script (orphaning) will be obsolete after it has been 
run and will NOT work after the switch from userids to usernames. 
'''

import sqlalchemy
from sqlalchemy.sql import func

from turbogears import update_config, config
from turbogears.database import session
import os
import sys 
from datetime import datetime

CONFDIR='@CONFDIR@' 
PKGDBDIR=os.path.join('@DATADIR@', 'fedora-packagedb') 
sys.path.append(PKGDBDIR) 

if len(sys.argv) > 1:
    update_config(configfile=sys.argv[1],
        modulename='pkgdb.config')
elif os.path.exists(os.path.join(os.path.dirname(__file__), '..',
        'setup.py')):
    update_config(configfile='pkgdb.cfg',modulename='pkgdb.config')
else:
    update_config(configfile=os.path.join(CONFDIR,'pkgdb.cfg'),
            modulename='pkgdb.config')
config.update({'pkgdb.basedir': PKGDBDIR}) 

from pkgdb import model
from pkgdb.users import ORPHAN_ID

# change statuscode of Orphaned packages ! Maybe this only needs to be run once?
orphanStatus = model.StatusTranslation.query.filter_by(
    statusname='Orphaned').first().statuscodeid

newOrphans = model.PackageListing.query.filter(
                 model.PackageListing.owner==ORPHAN_ID).filter(
                     model.PackageListing.statuscode!=orphanStatus)
if newOrphans.count() == 0:
    print '-- All orphan packages are already marked'
else:
    for pkgl in newOrphans:
        pkgl.statuscode = orphanStatus
        pkgl.statuschange = datetime.now(pkgl.statuschange.tzinfo)
        print 'Marked Orphan package: ' + pkgl.package.name + ' in ' + \
                pkgl.collection.branchname

# change statuscode of Deprecated packages when orphaned for more than 6 months
retiredStatus = model.StatusTranslation.query.filter_by(
    statusname='Deprecated').first().statuscodeid

retirees = model.PackageListing.query.filter(
                   model.PackageListing.statuscode==orphanStatus).filter(
                       func.date_part('month',func.age(
                           model.PackageListing.statuschange))>6).filter(
                               model.PackageListing.statuscode!=retiredStatus)
if retirees.count() == 0:
    print '-- All deprecated packages are already marked'
else:
    for pkgl in retirees:
        pkgl.statuscode = retiredStatus
        pkgl.statuschange = datetime.now(pkgl.statuschange.tzinfo) 
        print 'Marked Deprecated package: ' + pkgl.package.name + ' in ' + \
                pkgl.collection.branchname

session.flush()
