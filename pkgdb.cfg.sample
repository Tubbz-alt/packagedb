[global]
pkgdb.admin_grp = 'cvsadmin'
pkgdb.pkger_grp = 'packager'
pkgdb.mod_grp = 'sysadmin'
pkgdb.provenpkger_grp = 'provenpacakger'
pkgdb.newpkger_grp = 'newpackager'

fas.url = 'https://admin.fedoraproject.org/accounts/'
fas.username = 'user'
fas.password = 'password'

# Public URL for bugzilla.  It's the base of all our bugzilla addresses
bugzilla.url='https://bugzilla.redhat.com/'
# If our internal queries have to go to a different bugzilla address, set this.
# Data returned with this URL will be rewritten to the public URL before
# display.
#bugzilla.queryurl='https://bzprx.vip.phx.redhat.com'
bugzilla.user = 'user@somewhere.com'
bugzilla.password = 'password'
# Whether we want pkgdb to modify bugzilla bugs (right now, just to reassign
# bugs when the owner changes.).  Leave off for testing and
# set to True in production.
bugzilla.enable_modification = False

# Koji configuration
koji.huburl='https://koji.fedoraproject.org/kojihub'

memcached.servers=['127.0.0.1:11211']
sync-yum.cachedir="/misc/tmp"

# Certificates
cert.user='/etc/pki/pkgdb/pkgdb.pem'
cert.user_ca='/etc/pki/pkgdb/fedora-server-ca.cert'
cert.server_ca='/etc/pki/pkgdb/fedora-upload-ca.cert'

email.recipients=('packager-list@localhost',)
email.sender=('Fedora PackageDB', 'pkgdb@localhost')

# TurboMail settings
mail.on=False
mail.server='localhost'
mail.encoding='utf-8'
mail.debug=True

# DATABASE
sqlalchemy.dburi="postgres://pkgdbadmin:bunbunbun@localhost/pkgdb"
# sqlalchemy.dburi="sqlite://%(current_dir_uri)s/devdata.sqlite"

# set to 1 to make SQLAlchemy echo SQL commands on the console
sqlalchemy.echo = 0

# WSGI doesn't need a lot of db connections.  Up these if you're deploying as a
# standalone daemon
sqlalchemy.pool_size=1
sqlalchemy.max_overflow=1

# SERVER

# Some server parameters that you may want to tweak
server.socket_port=8086
server.socket_host="localhost"
server.webpath="/pkgdb"
server.static_media_dir="/var/pkgdb/static"
server.allow_static_icons=True

# WSGI Takes care of scaling these via httpd daemons.  Up these if you're
# deploying as a standalone daemon
server.thread_pool=1
#server.socket_queue_size=30

base_url_filter.on = True
base_url_filter.use_x_forwarded_host = False
base_url_filter.base_url = "https://localhost/"

visit.cookie.secure = True
#jsonfas.debug = True

# Enable the debug output at the end on pages.
# log_debug_info_filter.on = False

# You may want to turn this to development if testing standalone

server.environment="production"
server.log_to_screen = False
autoreload.package="pkgdb"
# Never under mod_wsgi:
autoreload.on = False

# session_filter.on = True

# Set to True if you'd like to abort execution if a controller gets an
# unexpected parameter. False by default
tg.strict_parameters = True

# LOGGING
# Logging configuration generally follows the style of the standard
# Python logging module configuration. Note that when specifying
# log format messages, you need to use *() for formatting variables.
# Deployment independent log configuration is in pkgdb/config/log.cfg

[logging]
[[formatters]]
# *(asctime)s can be added to these if not using apache logging
[[[message_only]]]
format='*(message)s'

[[[full_content]]]
format='*(name)s *(levelname)s *(message)s'

[[handlers]]
[[[cron_out]]]
class='StreamHandler'
level='DEBUG'
args='(sys.stdout,)'
formatter='full_content'

[[[debug_out]]]
class='StreamHandler'
level='DEBUG'
args='(sys.stdout,)'
formatter='full_content'

[[[access_out]]]
class='StreamHandler'
level='INFO'
args='(sys.stdout,)'
formatter='message_only'

[[[error_out]]]
class='StreamHandler'
level='ERROR'
args='(sys.stdout,)'
formatter='full_content'

[[loggers]]
[[[pkgdb]]]
level='DEBUG'
qualname='pkgdb'
handlers=['debug_out']

[[[pkgdb-sync-yum]]]
# Set to alter the verbosity of import script
level='DEBUG'
qualname='pkgdb-sync-yum'
handlers=['debug_out']

[[[allinfo]]]
level='INFO'
qualname='*'
handlers=['debug_out']

[[[access]]]
level='INFO'
qualname='turbogears.access'
handlers=['access_out']
propagate=0

[[[repo]]]
level='DEBUG'
qualname='pkgdb.repo'
handlers=['cron_out']

[[[database]]]
# Set to INFO to make SQLAlchemy display SQL commands
level='ERROR'
qualname='sqlalchemy.engine'
handlers=['error_out']
propagate=0
