man ================
Fedora PackageDB
================

:Author: Toshio Kuratomi
:Contact: toshio@fedoraproject.org
:Date: Wed 13 May, 2009
:Version: 0.4.x

The `PackageDB` keeps track of package ownership within Fedora.

.. contents::

-------
Project
-------

The `PackageDB` was started in January of 2007 to remove some of the hurdles
that made it more time consuming to maintain packages in Fedora after CVS
acls were introduced.  The intial goal was to take information about who owned,
comaintained, and was allowed to commit changes to a package and put it in a
database where owners could edit it.

The system began to be used by cvsadmins in July of 2007, and was opened for
general use in September.  At present it allows general users to manage the
ownership of packages and allows admins to add new packages or change things
when the owner is unresponsive.  A webUI is open for everyone and a simplistic
commandline client works for admin requests.

.. _`PackageDB`: https://fedorahosted.org/packagedb

Future goals
============

We're trying to manage our Roadmap_ of new features in trac.  So far it's
working out well.  If you have a new feature request, please open a
`trac ticket`_ and we'll add it to the schedule to be worked on.

.. _`Roadmap`: https://fedorahosted.org/packagedb/roadmap
.. _`trac ticket`: https://fedorahosted.org/packagedb/report/3

------------
Installation
------------

Although it's not working yet, the goal is to be able to run::

  paver build
  paver install --root ${path to installation}

and have a working installation.

Running from a Checkout
=======================

If you want to run from a checkout, you can perform the following commands::

Install Prerequisites
~~~~~~~~~~~~~~~~~~~~~
::
  yum -y install python-genshi TurboGears python-turbojson postgresql-server \
    postgresql-contrib python-TurboMail python-bugzilla python-fedora \
    python-psycopg2 python-sqlalchemy python-feedparser koji mod_wsgi \
    python-paver httpd mod_ssl babel python-cpio xz

Get and Build the Source
~~~~~~~~~~~~~~~~~~~~~~~~
::
  bzr branch bzr://bzr.fedorahosted.org/bzr/packagedb/fedora-packagedb-devel
  cd fedora-packagedb-devel
  paver egg_info
  paver build --install-conf=`pwd` --install-data=`pwd` --install-sbin=`pwd`

Setup the Database
~~~~~~~~~~~~~~~~~~
Make sure postgres is set to allow connections over tcp/ip using password
authentication.

If you do not have /var/lib/pgsql/data/pg_hba.conf, it may be because this is
a fresh install of postgres.  Initialize the service by entering the following
command::
  sudo service postgresql initdb

This should create several files in the /var/lib/pgsql/data directory including
the pg_hba.conf file.

Edit the /var/lib/pgsql/data/pg_hba.conf as the user postgres.  You might find
a line like this::

  host	all 	all	127.0.0.1/32	ident sameuser

Instead of that line, you need one that looks like this::

  host	all	all	127.0.0.1/32	md5

Create the postgres users that can access the database.  You will be prompted
to enter a password for each database user twice for verification purposes.
Note that the pkgdb web interface will use the pkgdbadmin user.  Other scripts
which only read from the database can use the pkgdbreadonly user to read
information only::

  sudo /etc/init.d/postgresql start
  sudo -u postgres createuser -SDRPE pkgdbadmin
    Enter password for new role: <password>
    Enter it again: <password>
  sudo -u postgres createuser -SDRPE pkgdbreadonly
    Enter password for new role: <password>
    Enter it again: <password>

Note:: If you don't have sudo, you can use su - instead::

  su -
  /etc/init.d/postgresql start
  su - postgres
  createuser -SDRPE pkgdbadmin
    Enter password for new role: <password>
    Enter it again: <password>
  createuser -SDRPE pkgdbreadonly
    Enter password for new role: <password>
    Enter it again: <password>

Get some test data and import it into the database.  You want to grab the most
recent dump from http://fedorahosted.org/releases/p/a/packagedb like this
(look for a .dump.xz that looks recent in that directory)::
  wget https://fedorahosted.org/releases/p/a/packagedb/pkgdb-20091117.dump.xz
  xzcat pkgdb-20091117.dump.xz | sudo -u postgres psql

Update the Database Schema
--------------------------

Currently the database dump is not up to date with the latest changes in the
devel branch. These steps won't be required after we get a healthy 0.5.x dbdump.
Run the following scripts to bring it up to date::

  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.4.1-packagebuild.sql
  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.5.0.sql
  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.5.0-tags-and-comments.sql
  python update-schema/repos.py > repos.sql
  sudo -u postgres psql pkgdb < repos.sql
  rm repos.sql
  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.5.0-2.applications.sql
  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.5.0-3.binarypackage.sql
  sudo -u postgres psql pkgdb < update-schema/pkgdb-0.4.0-0.5.0-4.lang_removal.sql

Your postgres server is now all set.

Setting up the cron jobs
------------------------
A cron job is needed to sync information from the yum repositories into the
packagedb. server-scripts/pkgdb-sync-yum

Other cron jobs are required to sync data out to cvs, bugzilla, and koji
owner-sync-pkgdb
pkgdb-sync-bugzilla

We don't have a good way to test these.latter scripts.

TG FeedController bug
---------------------

We're using an old version of TG (1.0) that no longer gets any updates so
we'll have to modify the local TG everytime.

Apply this patch to turbogears/feeds/feed.py
http://trac.turbogears.org/attachment/ticket/2348/feedkid.diff

And here's the link to the upstream ticket:
http://trac.turbogears.org/ticket/2348

Note: this has been applied to the Fedora and EPEL packages.

Start the Server (The new way)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

First copy the pkgdb.cfg.sample file to pkgdb.cfg.  Next, edit pkgdb.cfg to
configure the server to see your database.  You'll need to set fas.username to
a username (your Fedora Account System username will work), fas.password (if
you use your username, your password will work), and sqlalchemy.dburi.  The
dburi line will be something like this::

  sqlalchemy.dburi="postgres://pkgdbadmin:bunbunbun@localhost/pkgdb"

You'll need to change 'bunbunbun' to your password.

Next copy the httpd-pkgdb.conf file to your apache conf.d directory::

  sudo cp httpd-pkgdb.conf /etc/httpd/conf.d/

Restart apache::

  sudo /etc/init.d/httpd restart

In your favorite web browser, navigate to::
  https://localhost/pkgdb/


Start the Server (The old way)
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

.. warning::

    This method of starting the server is deprecated.  It's helpful for
    quickly bringing up a test instance but using the wsgi server with apache
    is more scalable and how we run things in production.  This is currently
    working (with the 0.4.0 release) but there's not going to be much testing
    to make sure it continues to work.

First copy the pkgdb.cfg.sample file to pkgdb.cfg.  Next, edit pkgdb.cfg to
configure the server to see your database.  You'll need to set fas.username to
a username (your Fedora Account System username will work), fas.password (if
you use your username, your password will work), and sqlalchemy.dburi.  The
dburi line will be something like this::

  sqlalchemy.dburi="postgres://pkgdbadmin:bunbunbun@localhost/pkgdb"

You'll need to change 'bunbunbun' to your password.

Next you'll need a directory for the logs.  You have two options.  The first
is to create a directory in /var/log and change the owner and group to yours
as follows::
  sudo mkdir /var/log/pkgdb
  sudo chown <your username>:<your groupname> /var/log/pkgdb

Or you can edit pkgdb.cfg and change all references to /var/log/pkgdb to a
directory that you own.  For example: if you want to use ~/packagedb/logs,
then change the following lines::
  [[handlers]]
  [[[cron_out]]]
  args="('/var/log/pkgdb/cron.log', 'D', 7)"

  args="('/home/<username>/packagedb/logs/cron.log', 'D', 7)"


  [[[debug_out]]]
  class='TimedRotatingFileHandler'
  args="('/var/log/pkgdb/server.log', 'D', 7)"

  args="('/home/<username>/packagedb/logs/server.log', 'D', 7)"


  [[[access_out]]]
  class='TimedRotatingFileHandler'
  level='INFO'
  args="('/var/log/pkgdb/access.log', 'D', 7)"

  args="('/home/<username>/packagedb/logs/access.log', 'D', 7)"


  [[[error_out]]]
  class='TimedRotatingFileHandler'
  args="('/var/log/pkgdb/server.log', 'D', 7)"

  args="('/home/<username>/packagedb/logs/server.log', 'D', 7)"


Then start the server::

  python start-pkgdb


In your favorite web browser, navigate to::
  http://localhost:8086/pkgdb/

------------
Translations
------------

You will need babel and setuptools to translate the messages in the packagedb::
  yum install babel setuptools

Updating the POT File
=====================

When you make changes that change the translatable strings in the package, you
should update the POT file.  Use the following paver command to do that::
  paver extract_messages -o po/fedora-packagedb.pot

Then commit your changes to source control.

Updating the PO Files
=====================

You should merge the new translatable strings into the PO files at the same
time.  Until we build a single paver command for this, we want to do this::
  for po_file in po/*.po ; do
    paver update_catalog -D fedora_packagedb -i po/fedora-packagedb.pot -l `basename $po_file` -d po -o $po_file
  done

Creating a new PO File
======================

If you are working on a translation for the first time, you'll need to create
the PO file.  Run this paver command substituting $LOCALE with the locale you
wish to translate for::
  paver init_catalog -D fedora_packagedb -i po/fedora-packagedb.pot -l $LOCALE -d po -o po/$LOCALE.po

That will initialize a new PO file from the current POT file.  The PO will be
located in po/$LOCALE.po

After creation, this should be committed to the revision control system.

Compiling Message Catalogs
==========================

Message catalogs can be compiled for testing and should always be compiled
just prior to release.  Do this with the following paver command::
  paver make_catalogs

Compiled message catalogs should not be committed to source control.

Installing Message Catalogs
===========================

``paver install_catalogs`` will install the catalogs.  This commmand has been
added to ``paver install``.

-------
Release
-------

We want to get to the place where a release can be made via a paver target.
Currently, this is more involved.

1) Merge everything into the fedora-packagedb-stable branch.  Push the changes to
   the server.  Eventually this should be the last manual step.  Everything
   else should be automated::

     bzr merge [from feature branches]
     bzr commit
     bzr push bzr+ssh://bzr.fedorahosted.org/bzr/packagedb/fedora-packagedb-stable

2) Go to a temporary directory and checkout a copy of stable::
     bzr checkout --lightweight bzr+ssh://bzr.fedorahosted.org/bzr/packagedb/fedora-packagedb-stable/ release

3) Go to that directory and run::
     paver sdist --format bztar

4) copy the dist/fedora-packagedb-VERSION.tar.bz2 and fedora-packagedb.spec files
   to where you build Fedora RPMS.  Do a test build::
     cp dist/fedora-packagedb-*.tar.bz2 fedora-packagedb.spec /srv/cvs/fedora-packagedb/
     pushd /srv/cvs/fedora-packagedb/
     rpmbuild-md5 -bs --nodeps fedora-packagedb.spec
     mock -r epel-5-i386 *.src.rpm

   (rpmbuild-md5 is in the fedora-packager package.)

5) Make sure the build completes.  Run rpmlint on the results.  Install and
   test the new packages::
     rpmlint *rpm
     sudo rpm -Uvh *noarch.rpm
     [test]

6) When satisfied that the build works, tag the repository::
     popd
     bzr tag VERSION
     bzr push bzr+ssh://bzr.fedorahosted.org/bzr/packagedb/fedora-packagedb-stable

7) Upload the tarball to fedorahosted.  Note: The directory is slightly
   different if you're not a fedorahosted admin::
     scp dist/fedora-packagedb*tar.gz fedorahosted.org:/srv/web/releases/p/a/packagedb/

8) Finish building and pushing packages for Fedora.
